{"version":3,"sources":["webpack:///./src/components/goods/Params.vue?aec3","webpack:///src/components/goods/Params.vue","webpack:///./src/components/goods/Params.vue?5c45","webpack:///./src/components/goods/Params.vue","webpack:///./node_modules/core-js/modules/es.string.trim.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./src/components/goods/Cate.vue?1b02","webpack:///src/components/goods/Cate.vue","webpack:///./src/components/goods/Cate.vue?a29b","webpack:///./src/components/goods/Cate.vue","webpack:///./src/components/goods/Params.vue?e9fd","webpack:///./src/components/goods/Cate.vue?4174","webpack:///./node_modules/core-js/internals/string-trim-forced.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","path","_v","staticClass","catelist","cascaderProps","on","handleChange","model","value","callback","$$v","selectedKeys","expression","handleTabClick","activeName","isBtnDisabled","$event","addDialogVisible","manyTableData","scopedSlots","_u","key","fn","scope","_l","row","item","i","handleClosed","_s","ref","handleInputConfirm","nativeOn","type","indexOf","_k","keyCode","$set","showInput","showEditDialog","attr_id","removeParams","onlyTableData","titleText","addDialogClosed","addForm","addFormRules","slot","addParams","editDialogVisible","editDialogClosed","editForm","editFormRules","editParams","staticRenderFns","name","data","label","children","expandTrigger","checkStrictly","attr_name","created","getCateList","methods","getParamsData","$refs","addFormRef","resetFields","validate","editFormRef","inputVisible","$nextTick","attr_vals","splice","saveAttrVals","computed","length","cateId","component","$","$trim","trim","forcedStringTrimMethod","target","proto","forced","module","exports","requireObjectCoercible","whitespaces","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","String","replace","start","end","showAddCateDialog","catalist","columns","cat_deleted","staticStyle","cat_level","cat_id","removeCateById","queryInfo","pagenum","pagesize","total","handleSizeChange","handleCurrentChange","addCateDialogVisible","addCateDialogClosed","addCateForm","addCateFormRules","parentCateList","parentCateChanged","addCate","editCateInfo","cat_pid","cat_name","newSize","newPage","getParentCateList","addCateFormRef","fails","non","METHOD_NAME"],"mappings":"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","file":"js/cate_params.a287ffa0.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"参数列表\")])],1),_c('el-card',[_c('el-alert',{attrs:{\"title\":\"注意: 只允许为第三级分类设置相关参数! \",\"type\":\"warning\",\"closable\":false,\"show-icon\":\"\"}}),_c('el-row',{staticClass:\"cat_opt\"},[_c('el-col',[_c('span',[_vm._v(\"选择商品分类: \")]),_c('el-cascader',{attrs:{\"options\":_vm.catelist,\"props\":_vm.cascaderProps,\"clearable\":\"\"},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleTabClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加参数\")]),_c('el-table',{attrs:{\"data\":_vm.manyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClosed(i, scope.row)}}},[_vm._v(_vm._s(item)+\" \")])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"label\":\"参数名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加属性\")]),_c('el-table',{attrs:{\"data\":_vm.onlyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClosed(i, scope.row)}}},[_vm._v(_vm._s(item)+\" \")])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"label\":\"参数名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.titleText,\"visible\":_vm.addDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addDialogVisible=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addFormRef\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.addFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addForm.attr_name),callback:function ($$v) {_vm.$set(_vm.addForm, \"attr_name\", $$v)},expression:\"addForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addParams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":'修改' + _vm.titleText,\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editFormRef\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.editFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editForm.attr_name),callback:function ($$v) {_vm.$set(_vm.editForm, \"attr_name\", $$v)},expression:\"editForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editParams}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图区 -->\r\n    <el-card>\r\n      <!-- 警告区域 -->\r\n      <el-alert\r\n        title=\"注意: 只允许为第三级分类设置相关参数! \"\r\n        type=\"warning\"\r\n        :closable=\"false\"\r\n        show-icon\r\n      >\r\n      </el-alert>\r\n\r\n      <!-- 选择商品分类区域 -->\r\n      <el-row class=\"cat_opt\">\r\n        <el-col>\r\n          <span>选择商品分类: </span>\r\n          <!-- 选择商品分类的级联选择框 -->\r\n          <el-cascader\r\n            v-model=\"selectedKeys\"\r\n            :options=\"catelist\"\r\n            :props=\"cascaderProps\"\r\n            @change=\"handleChange\"\r\n            clearable\r\n          ></el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- tab页签区域 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <!-- 添加动态参数的面板 -->\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <!-- 添加参数的按钮 -->\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"isBtnDisabled\"\r\n            @click=\"addDialogVisible = true\"\r\n            >添加参数</el-button\r\n          >\r\n          <!-- 动态参数表格 -->\r\n          <el-table :data=\"manyTableData\" border stripe>\r\n            <!--展开行 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染tag标签 -->\r\n                <!-- i该元素项在数组中的下标 根据下标进行删除 -->\r\n                <el-tag\r\n                  v-for=\"(item, i) in scope.row.attr_vals\"\r\n                  :key=\"i\"\r\n                  closable\r\n                  @close=\"handleClosed(i, scope.row)\"\r\n                  >{{ item }}\r\n                </el-tag>\r\n                <!-- 输入的文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <!-- 添加的按钮 -->\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n            <el-table-column\r\n              label=\"参数名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeParams(scope.row.attr_id)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <!-- 添加静态属性的面板 -->\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <!-- 添加属性的按钮 -->\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"isBtnDisabled\"\r\n            @click=\"addDialogVisible = true\"\r\n            >添加属性</el-button\r\n          >\r\n          <!-- 静态属性表格 -->\r\n          <el-table :data=\"onlyTableData\" border stripe>\r\n            <!--展开行 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染tag标签 -->\r\n                <!-- i该元素项在数组中的下标 根据下标进行删除 -->\r\n                <el-tag\r\n                  v-for=\"(item, i) in scope.row.attr_vals\"\r\n                  :key=\"i\"\r\n                  closable\r\n                  @close=\"handleClosed(i, scope.row)\"\r\n                  >{{ item }}\r\n                </el-tag>\r\n                <!-- 输入的文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <!-- 添加的按钮 -->\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n            <el-table-column\r\n              label=\"参数名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeParams(scope.row.attr_id)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n\r\n    <!-- 添加参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"'添加' + titleText\"\r\n      :visible.sync=\"addDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addDialogClosed\"\r\n    >\r\n      <el-form\r\n        :model=\"addForm\"\r\n        :rules=\"addFormRules\"\r\n        ref=\"addFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"'修改' + titleText\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"editDialogClosed\"\r\n    >\r\n      <el-form\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        ref=\"editFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Params',\r\n  data() {\r\n    return {\r\n      // 商品分类列表\r\n      catelist: [],\r\n      // 级联选择器的配置对象\r\n      cascaderProps: {\r\n        value: 'cat_id',\r\n        label: 'cat_name',\r\n        children: 'children',\r\n        expandTrigger: 'hover',\r\n        checkStrictly: true,\r\n      },\r\n      // 级联选择框双向绑定到的数组\r\n      selectedKeys: [],\r\n      // 被激活的页签的名称\r\n      activeName: 'many',\r\n      // 动态参数数据\r\n      manyTableData: [],\r\n      // 静态属性数据\r\n      onlyTableData: [],\r\n      // 控制添加参数的对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      // 添加参数的表单数据对象\r\n      addForm: {\r\n        attr_name: '',\r\n      },\r\n      // 添加表单的验证规则对象\r\n      addFormRules: {\r\n        attr_name: [\r\n          { required: true, message: '请输入参数名称', trigger: 'blur' },\r\n        ],\r\n      },\r\n      // 控制修改对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      // 修改的表单数据对象\r\n      editForm: {\r\n        attr_name: '',\r\n      },\r\n      // 修改表单的验证规则对象\r\n      editFormRules: {\r\n        attr_name: [\r\n          { required: true, message: '请输入参数名称', trigger: 'blur' },\r\n        ],\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    // 获取所有的商品分类列表\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get('categories')\r\n      if (res.meta.status != 200) {\r\n        return this.$message.error('获取商品分类失败! ')\r\n      } else {\r\n        this.catelist = res.data\r\n        // console.log(this.catelist);\r\n      }\r\n    },\r\n    // 级联选择框选中项变化, 会触发这个函数\r\n    handleChange() {\r\n      this.getParamsData()\r\n    },\r\n    // tab 页签点击事件的处理函数\r\n    handleTabClick() {\r\n      // console.log(this.activeName)\r\n      this.getParamsData()\r\n    },\r\n    // 获取参数的列表数据\r\n    async getParamsData() {\r\n      // 如果选中的不是三级分类\r\n      if (this.selectedKeys.length !== 3) {\r\n        this.selectedKeys = []\r\n        this.manyTableData = []\r\n        this.onlyTableData = []\r\n        return\r\n      }\r\n      // 选中的是三级分类\r\n      else {\r\n        // console.log(this.selectedKeys)\r\n        // 根据所选分类的id, 和当前所处的面板, 获取对应的参数\r\n        const { data: res } = await this.$http.get(\r\n          `categories/${this.cateId}/attributes`,\r\n          {\r\n            params: { sel: this.activeName },\r\n          }\r\n        )\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('获取参数列表失败! ')\r\n        } else {\r\n          res.data.forEach((item) => {\r\n            // 三元表达式 判断是否为空 不为空则分隔\r\n            item.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : []\r\n            /* 每一行数据都有自己的文本框和双向绑定 */\r\n            // 控制文本框的显示与隐藏\r\n            item.inputVisible = false\r\n            // 文本框中输入的值\r\n            item.inputValue = ''\r\n          })\r\n          // console.log(res.data)\r\n          // 获取的数据属于动态表格\r\n          if (this.activeName === 'many') {\r\n            this.manyTableData = res.data\r\n          } else {\r\n            this.onlyTableData = res.data\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 监听添加对话框的关闭事件 并且重置表单\r\n    addDialogClosed() {\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    // 点击按钮添加参数\r\n    addParams() {\r\n      // 表单预验证\r\n      this.$refs.addFormRef.validate(async (valid) => {\r\n        if (!valid) {\r\n          return\r\n        } else {\r\n          const { data: res } = await this.$http.post(\r\n            `categories/${this.cateId}/attributes`,\r\n            {\r\n              attr_name: this.addForm.attr_name,\r\n              attr_sel: this.activeName,\r\n            }\r\n          )\r\n          if (res.meta.status !== 201) {\r\n            return this.$message.error('添加参数失败! ')\r\n          } else {\r\n            this.$message.success('添加参数成功! ')\r\n            // 关闭对话框\r\n            this.addDialogVisible = false\r\n            // 刷新数据列表\r\n            this.getParamsData()\r\n          }\r\n        }\r\n      })\r\n    },\r\n    // 点击按钮展示修改对话框\r\n    async showEditDialog(attr_id) {\r\n      // 查询当前参数的信息\r\n      const { data: res } = await this.$http.get(\r\n        `categories/${this.cateId}/attributes/${attr_id}`,\r\n        {\r\n          params: { attr_sel: this.activeName },\r\n        }\r\n      )\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取参数信息失败! ')\r\n      } else {\r\n        this.editForm = res.data\r\n        // 展示编辑对话框\r\n        this.editDialogVisible = true\r\n      }\r\n    },\r\n    // 监听修改对话框的关闭事件 并且重置表单\r\n    editDialogClosed() {\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 点击按钮, 修改参数信息\r\n    editParams() {\r\n      // 表单预验证\r\n      this.$refs.editFormRef.validate(async (valid) => {\r\n        if (!valid) {\r\n          return\r\n        } else {\r\n          const { data: res } = await this.$http.put(\r\n            `categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\r\n            {\r\n              attr_name: this.editForm.attr_name,\r\n              attr_sel: this.activeName,\r\n            }\r\n          )\r\n          if (res.meta.status !== 200) {\r\n            return this.$message.error('修改参数失败! ')\r\n          } else {\r\n            this.$message.success('修改参数成功! ')\r\n            // 刷新数据列表\r\n            this.getParamsData()\r\n            // 隐藏对话框\r\n            this.editDialogVisible = false\r\n          }\r\n        }\r\n      })\r\n    },\r\n    // 点击按钮删除参数信息\r\n    async removeParams(attr_id) {\r\n      // 弹窗提示用户是否删除\r\n      const confirmResult = await this.$confirm(\r\n        '此操作将永久删除该参数, 是否继续?',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        }\r\n      ).catch((err) => err)\r\n\r\n      // 用户取消了删除的操作\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除! ')\r\n      } else {\r\n        // 成功删除 发送网络请求来完成此次任务\r\n        const { data: res } = await this.$http.delete(\r\n          `categories/${this.cateId}/attributes/${attr_id}`\r\n        )\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('删除参数失败! ')\r\n        } else {\r\n          this.$message.success('删除参数成功! ')\r\n          // 更新用户列表\r\n          this.getParamsData()\r\n        }\r\n      }\r\n    },\r\n    // 文本框失去焦点 或 按下enter键 都会触发\r\n    async handleInputConfirm(row) {\r\n      // 如果文本框输入的是一堆空格\r\n      if (row.inputValue.trim().length === 0) {\r\n        // 将文本框值置为空\r\n        row.inputValue = ''\r\n        // 隐藏文本框\r\n        row.inputVisible = false\r\n        return\r\n      } else {\r\n        // 用户输入的不是空格 需要进行后续的处理\r\n        // 将用户输入的数据存放在 attr_vals 数组中\r\n        row.attr_vals.push(row.inputValue.trim())\r\n        row.inputValue = ''\r\n        row.inputVisible = false\r\n        // 将数据提交至数据库\r\n        this.saveAttrVals(row)\r\n      }\r\n    },\r\n    // 点击按钮, 展示文本输入框\r\n    showInput(row) {\r\n      row.inputVisible = true\r\n      // 让文本框自动获得焦点\r\n      //  $nextTick 方法的作用, 当页面上的元素被重新渲染之后,才会指定回调函数中的代码\r\n      this.$nextTick((_) => {\r\n        this.$refs.saveTagInput.$refs.input.focus()\r\n      })\r\n    },\r\n    // 将对 attr_vals 数组的操作封装\r\n    async saveAttrVals(row) {\r\n      // 将数据提交至数据库\r\n      const { data: res } = await this.$http.put(\r\n        `categories/${this.cateId}/attributes/${row.attr_id}`,\r\n        {\r\n          attr_name: row.attr_name,\r\n          attr_sel: row.attr_sel,\r\n          attr_vals: row.attr_vals.join(' '),\r\n        }\r\n      )\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('修改参数项失败! ')\r\n      } else {\r\n        this.$message.success('修改参数项成功! ')\r\n      }\r\n    },\r\n    // 关闭标签 在数据库中删除对应项\r\n    handleClosed(i, row) {\r\n      // 删除对应项\r\n      // 从第 i 个开始删除, 共删除 1 个\r\n      row.attr_vals.splice(i, 1)\r\n      // 将数据提交至数据库\r\n      this.saveAttrVals(row)\r\n    },\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用, 则返回true, 否则返回false\r\n    isBtnDisabled() {\r\n      if (this.selectedKeys.length !== 3) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    // 当前选中的三级分类的id\r\n    cateId() {\r\n      if (this.selectedKeys.length === 3) {\r\n        return this.selectedKeys[2]\r\n      } else {\r\n        return null\r\n      }\r\n    },\r\n    // 动态计算标题的文本\r\n    titleText() {\r\n      if (this.activeName === 'many') {\r\n        return '动态参数'\r\n      } else {\r\n        return '静态属性'\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin: 15px 0;\r\n}\r\n.el-cascader {\r\n  width: 280px;\r\n}\r\n.el-tag {\r\n  margin: 10px;\r\n}\r\n.input-new-tag {\r\n  width: 150px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Params.vue?vue&type=template&id=8628bb36&scoped=true&\"\nimport script from \"./Params.vue?vue&type=script&lang=js&\"\nexport * from \"./Params.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Params.vue?vue&type=style&index=0&id=8628bb36&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8628bb36\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品分类\")])],1),_c('el-card',[_c('el-row',[_c('el-col',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.showAddCateDialog}},[_vm._v(\" 添加分类 \")])],1)],1),_c('tree-table',{staticClass:\"tree-table\",attrs:{\"data\":_vm.catalist,\"columns\":_vm.columns,\"expand-type\":false,\"selection-type\":false,\"show-index\":\"\",\"index-text\":\"#\",\"border\":\"\"},scopedSlots:_vm._u([{key:\"isok\",fn:function(scope){return [(scope.row.cat_deleted === false)?_c('i',{staticClass:\"el-icon-success\",staticStyle:{\"color\":\"lightgreen\"}}):_c('i',{staticClass:\"el-icon-error\",staticStyle:{\"color\":\"red\"}})]}},{key:\"order\",fn:function(scope){return [(scope.row.cat_level === 0)?_c('el-tag',{attrs:{\"size\":\"mini\"}},[_vm._v(\"一级\")]):(scope.row.cat_level === 1)?_c('el-tag',{attrs:{\"type\":\"success\",\"size\":\"mini\"}},[_vm._v(\"二级\")]):_c('el-tag',{attrs:{\"type\":\"warning\",\"size\":\"mini\"}},[_vm._v(\"三级\")])]}},{key:\"opt\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.cat_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeCateById(scope.row.cat_id)}}},[_vm._v(\"删除\")])]}}])}),_c('el-pagination',{attrs:{\"current-page\":_vm.queryInfo.pagenum,\"page-sizes\":[3, 5, 10, 15],\"page-size\":_vm.queryInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{attrs:{\"title\":\"添加分类\",\"visible\":_vm.addCateDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addCateDialogVisible=$event},\"close\":_vm.addCateDialogClosed}},[_c('el-form',{ref:\"addCateFormRef\",attrs:{\"model\":_vm.addCateForm,\"rules\":_vm.addCateFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称: \",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.addCateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.addCateForm, \"cat_name\", $$v)},expression:\"addCateForm.cat_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"父级分类: \"}},[_c('el-cascader',{attrs:{\"options\":_vm.parentCateList,\"props\":_vm.cascaderProps,\"clearable\":\"\"},on:{\"change\":_vm.parentCateChanged},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addCateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCate}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"修改分类名称\",\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editFormRef\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.editFormRules,\"label-width\":\"70px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称\"}},[_c('el-input',{model:{value:(_vm.editForm.cat_name),callback:function ($$v) {_vm.$set(_vm.editForm, \"cat_name\", $$v)},expression:\"editForm.cat_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editCateInfo}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 添加分类按钮 -->\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">\r\n            添加分类\r\n          </el-button>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 表格 -->\r\n      <tree-table\r\n        class=\"tree-table\"\r\n        :data=\"catalist\"\r\n        :columns=\"columns\"\r\n        :expand-type=\"false\"\r\n        :selection-type=\"false\"\r\n        show-index\r\n        index-text=\"#\"\r\n        border\r\n      >\r\n        <!-- 是否有效 -->\r\n        <template slot=\"isok\" slot-scope=\"scope\">\r\n          <i\r\n            class=\"el-icon-success\"\r\n            v-if=\"scope.row.cat_deleted === false\"\r\n            style=\"color: lightgreen\"\r\n          ></i>\r\n          <i class=\"el-icon-error\" v-else style=\"color: red\"></i>\r\n        </template>\r\n\r\n        <!-- 排序 -->\r\n        <template slot=\"order\" slot-scope=\"scope\">\r\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level === 0\">一级</el-tag>\r\n          <el-tag\r\n            type=\"success\"\r\n            size=\"mini\"\r\n            v-else-if=\"scope.row.cat_level === 1\"\r\n            >二级</el-tag\r\n          >\r\n          <el-tag type=\"warning\" size=\"mini\" v-else>三级</el-tag>\r\n        </template>\r\n\r\n        <!-- 操作 -->\r\n        <template slot=\"opt\" slot-scope=\"scope\">\r\n          <el-button\r\n            type=\"primary\"\r\n            icon=\"el-icon-edit\"\r\n            size=\"mini\"\r\n            @click=\"showEditDialog(scope.row.cat_id)\"\r\n            >编辑</el-button\r\n          >\r\n          <el-button\r\n            type=\"danger\"\r\n            icon=\"el-icon-delete\"\r\n            size=\"mini\"\r\n            @click=\"removeCateById(scope.row.cat_id)\"\r\n            >删除</el-button\r\n          >\r\n        </template>\r\n      </tree-table>\r\n\r\n      <!-- 分页区域 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[3, 5, 10, 15]\"\r\n        :page-size=\"queryInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 添加分类对话框 -->\r\n    <el-dialog\r\n      title=\"添加分类\"\r\n      :visible.sync=\"addCateDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addCateDialogClosed\"\r\n    >\r\n      <el-form\r\n        :model=\"addCateForm\"\r\n        :rules=\"addCateFormRules\"\r\n        ref=\"addCateFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"分类名称: \" prop=\"cat_name\">\r\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类: \">\r\n          <!-- options 用于指定数据源 -->\r\n          <!-- props 用来指定配置对象 -->\r\n          <el-cascader\r\n            v-model=\"selectedKeys\"\r\n            :options=\"parentCateList\"\r\n            :props=\"cascaderProps\"\r\n            @change=\"parentCateChanged\"\r\n            clearable\r\n          ></el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改分类的对话框 -->\r\n    <el-dialog\r\n      title=\"修改分类名称\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"editDialogClosed\"\r\n    >\r\n      <el-form\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        ref=\"editFormRef\"\r\n        label-width=\"70px\"\r\n      >\r\n        <el-form-item label=\"分类名称\">\r\n          <el-input v-model=\"editForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editCateInfo\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Cate',\r\n  data() {\r\n    return {\r\n      // 封装请求参数\r\n      queryInfo: {\r\n        type: 3, // 三层分类->获取全部数据\r\n        pagenum: 1, // 第1页->页码\r\n        pagesize: 5, // 一页显示5条数据->总数据\r\n      },\r\n      // 商品分类数据\r\n      catalist: [],\r\n      // 总页数\r\n      total: 0,\r\n      // 为表格指定列的定义\r\n      columns: [\r\n        {\r\n          label: '分类名称',\r\n          prop: 'cat_name',\r\n        },\r\n        {\r\n          label: '是否有效',\r\n          // 表示将当前列(使用'isok'作为插槽名字的列)定义为模板列\r\n          type: 'template',\r\n          // 表示当前这一列使用模板名称\r\n          template: 'isok',\r\n        },\r\n        {\r\n          label: '排序',\r\n          // 表示将当前列(使用'isok'作为插槽名字的列)定义为模板列\r\n          type: 'template',\r\n          // 表示当前这一列使用模板名称\r\n          template: 'order',\r\n        },\r\n        {\r\n          label: '操作',\r\n          // 表示将当前列(使用'isok'作为插槽名字的列)定义为模板列\r\n          type: 'template',\r\n          // 表示当前这一列使用模板名称\r\n          template: 'opt',\r\n        },\r\n      ],\r\n      // 控制添加分类的对话框的打开与关闭\r\n      addCateDialogVisible: false,\r\n      // 添加分类的表单数据对象\r\n      addCateForm: {\r\n        // 父级分类的id\r\n        cat_pid: 0,\r\n        // 将要添加的分类的名称\r\n        cat_name: '',\r\n        // 分类的等级, 默认要添加的是一级分类\r\n        cat_level: 0,\r\n      },\r\n      // 添加分类表单的验证规则对象\r\n      addCateFormRules: {\r\n        cat_name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\r\n        ],\r\n      },\r\n      // 父级分类的列表\r\n      parentCateList: [],\r\n      // 指定级联选择器的配置对象\r\n      cascaderProps: {\r\n        value: 'cat_id',\r\n        label: 'cat_name',\r\n        children: 'children',\r\n        expandTrigger: 'hover',\r\n        checkStrictly: true,\r\n      },\r\n      // 选中的父级分类Id数组\r\n      selectedKeys: [],\r\n\r\n      // 控制修改分类名称对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      // 查询到的分类名称信息对象\r\n      editForm: {},\r\n      // 修改表单的验证规则对象\r\n      editFormRules: {\r\n        cat_name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\r\n        ],\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get('categories', {\r\n        params: this.queryInfo,\r\n      })\r\n\r\n      if (res.meta.status !== 200) {\r\n        this.$message.error('获取商品分类失败! ')\r\n      } else {\r\n        // console.log(res.data)\r\n        // 将数据列表存放至 catalist\r\n        this.catalist = res.data.result\r\n        // 记录总数据条数\r\n        this.total = res.data.total\r\n      }\r\n    },\r\n    // 监听 pagesize 改变\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pagesize = newSize\r\n      this.getCateList()\r\n    },\r\n    // 监听 pagenum 的改变\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pagenum = newPage\r\n      this.getCateList()\r\n    },\r\n    // 点击按钮, 展示添加分类的对话框\r\n    showAddCateDialog() {\r\n      this.getParentCateList()\r\n      this.addCateDialogVisible = true\r\n    },\r\n    // 获取父级分类的数据列表\r\n    async getParentCateList() {\r\n      const { data: res } = await this.$http.get('categories', {\r\n        params: { type: 2 },\r\n      })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取父级分类数据失败! ')\r\n      } else {\r\n        this.parentCateList = res.data\r\n        // console.log(this.parentCateList); // 将父级分类的列表存起来\r\n      }\r\n    },\r\n    // 选择项发生变化触发该函数\r\n    parentCateChanged() {\r\n      console.log(this.selectedKeys)\r\n      // 如果 selectedKeys 数组中的 length 大于0, 证明选中了父级分类\r\n      if (this.selectedKeys.length > 0) {\r\n        // 父级分类的Id\r\n        this.addCateForm.cat_pid =\r\n          this.selectedKeys[this.selectedKeys.length - 1]\r\n\r\n        // 为当前分类的等级赋值\r\n        this.addCateForm.cat_level = this.selectedKeys.length\r\n        return\r\n      }\r\n      // 没有选中任何父级分类\r\n      else {\r\n        // 父级分类的Id\r\n        this.addCateForm.cat_pid = 0\r\n        // 为当前分类的等级赋值\r\n        this.addCateForm.cat_level = 0\r\n      }\r\n    },\r\n    // 点击按钮添加新的分类\r\n    addCate() {\r\n      // console.log(this.addCateForm)\r\n      this.$refs.addCateFormRef.validate(async (valid) => {\r\n        if (!valid) {\r\n          return\r\n        } else {\r\n          const { data: res } = await this.$http.post(\r\n            'categories',\r\n            this.addCateForm\r\n          )\r\n\r\n          if (res.meta.status !== 201) {\r\n            this.$message.error('添加分类失败! ')\r\n          } else {\r\n            this.$message.success('添加分类成功! ')\r\n            this.getCateList()\r\n            this.addCateDialogVisible = false\r\n          }\r\n        }\r\n      })\r\n    },\r\n    // 监听对话框的关闭事件, 重置表单数据\r\n    addCateDialogClosed() {\r\n      this.$refs.addCateFormRef.resetFields()\r\n      this.selectedKeys = []\r\n      this.addCateForm.cat_pid = 0\r\n      this.addCateForm.cat_level = 0\r\n    },\r\n    // 点击修改按钮 展示编辑对话框\r\n    async showEditDialog(id) {\r\n      // console.log(id); // 输出获取到的id\r\n      const { data: res } = await this.$http.get('categories/' + id)\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('查询商品分类信息失败!')\r\n      } else {\r\n        this.editForm = res.data // 将获取到的data数据存起来\r\n      }\r\n      // 显示对话框\r\n      this.editDialogVisible = true\r\n    },\r\n    // 监听修改分类名称对话框的关闭事件\r\n    editDialogClosed() {\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 修改分类名称并提交\r\n    editCateInfo() {\r\n      this.$refs.editFormRef.validate(async (valid) => {\r\n        if (!valid) {\r\n          return\r\n        } else {\r\n          // 发起修改分类名称信息的数据请求\r\n          const { data: res } = await this.$http.put(\r\n            'categories/' + this.editForm.cat_id,\r\n            {\r\n              cat_name: this.editForm.cat_name,\r\n            }\r\n          )\r\n          if (res.meta.status !== 200) {\r\n            console.log(this.editForm)\r\n            return this.$message.error('更新商品分类信息失败! ')\r\n          } else {\r\n            // 关闭对话框\r\n            this.editDialogVisible = false\r\n            // 刷新数据列表\r\n            this.getCateList()\r\n            // 提示修改成功\r\n            this.$message.success('更新商品分类信息成功! ')\r\n          }\r\n        }\r\n      })\r\n    },\r\n    // 根据id删除对应的分类\r\n    async removeCateById(id) {\r\n      // 弹窗提示用户是否删除\r\n      const confirmResult = await this.$confirm(\r\n        '此操作将永久删除该分类, 是否继续?',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        }\r\n      ).catch((err) => err)\r\n\r\n      // 如果用户确认删除, 则返回值为字符串 confirm\r\n      // 如果用户取消了删除, 则返回值为字符串 concel\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除')\r\n      } else {\r\n        // 成功删除 发送网络请求来完成此次任务\r\n        const { data: res } = await this.$http.delete('categories/' + id)\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('删除分类失败! ')\r\n        } else {\r\n          this.$message.success('删除分类成功! ')\r\n          // 更新分类列表\r\n          this.getCateList()\r\n        }\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.tree-table {\r\n  font-size: 14px;\r\n  margin-top: 15px;\r\n}\r\n.el-cascader {\r\n  width: 100%;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Cate.vue?vue&type=template&id=07b2b112&scoped=true&\"\nimport script from \"./Cate.vue?vue&type=script&lang=js&\"\nexport * from \"./Cate.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Cate.vue?vue&type=style&index=0&id=07b2b112&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"07b2b112\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Params.vue?vue&type=style&index=0&id=8628bb36&lang=less&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cate.vue?vue&type=style&index=0&id=07b2b112&lang=less&scoped=true&\"","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n"],"sourceRoot":""}